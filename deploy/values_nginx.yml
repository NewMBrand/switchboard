controller:
  name: ${APP_NAME}
  image:
    repository: "nginx/nginx-ingress"
    tag: "stable"
    pullPolicy: "IfNotPresent"
  config:
    entries:
      server-snippets: |
        server {
            listen       ${PORT};
            listen  [::]:${PORT};
            server_name  ${ENDPOINT}; # Set the server name to your domain

            # drives graphql endpoint
            location ${BASE_PATH}/drives {
                proxy_pass http://${API_APP_NAME}
            }

            # drive graphql endpoint
            location ${BASE_PATH}/d {
                proxy_pass http://${API_APP_NAME};
            }

            # version endpoint
            location ${BASE_PATH}/versions {
                proxy_pass http://${API_APP_NAME};
            }

            # drive graphql endpoint
            location ${BASE_PATH}/h {
                proxy_pass http://${API_APP_NAME};
            }

            # GraphQL Explorer
            location ${BASE_PATH}/explorer {
                proxy_pass http://${API_APP_NAME};
            }

            # Prometheus metrics
            location ${BASE_PATH}/metrics {
                proxy_pass http://${API_APP_NAME};
            }

            # frontend
            location / {
                rewrite /(.*) /$1 break;
                proxy_pass http://${FRONTEND_APP_NAME};
            }

            client_max_body_size 64M;
        }
  service:
    type: "LoadBalancer"
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-internal: "false"
      external-dns.alpha.kubernetes.io/hostname: ${ENDPOINT};
    externalTrafficPolicy: "Local"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
  replicaCount: 2

serviceAccount:
  create: true

resources:
  limits:
    cpu: 512m
    memory: 256Mi
  requests:
    cpu: 256m
    memory: 128Mi
